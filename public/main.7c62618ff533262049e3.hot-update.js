/*! For license information please see main.7c62618ff533262049e3.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateoguzsancaktar("main",{"./app/components/Canvas/index.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>d});var s=t("./node_modules/ogl/src/core/Renderer.js"),n=t("./node_modules/ogl/src/core/Camera.js"),a=t("./node_modules/ogl/src/core/Transform.js"),o=t("./node_modules/ogl/src/extras/Box.js"),i=t("./node_modules/ogl/src/core/Program.js"),c=t("./node_modules/ogl/src/core/Mesh.js"),h=t("./app/shaders/plane-vertex.glsl");Object(function(){var e=new Error("Cannot find module '../../shaders/plane-fragment.glsl'");throw e.code="MODULE_NOT_FOUND",e}());class d{constructor(){this.createRenderer(),this.createCamera(),this.createScene(),this.createCube()}createRenderer(){this.renderer=new s.Renderer,this.gl=this.renderer.gl,document.body.append(this.gl.canvas)}createCamera(){this.camera=new n.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new a.Transform}createCube(){this.geometry=new o.Box(this.gl),this.program=new i.Program(this.gl,{vertex:h,fragment:Object(function(){var e=new Error("Cannot find module '../../shaders/plane-fragment.glsl'");throw e.code="MODULE_NOT_FOUND",e}())}),this.mesh=new c.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:this.gl.canvas.width/this.gl.canvas.height})}update(){this.mesh.rotation.x+=.01,this.mesh.rotation.y+=.01,this.renderer.render({scene:this.scene,camera:this.camera})}}},"./app/shaders/plane-vertex.glsl":e=>{e.exports="#define GLSLIFY 1\n        attribute vec3 position;\n\n            uniform mat4 modelViewMatrix;\n            uniform mat4 projectionMatrix;\n\n            void main() {\n                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }\n"}},(function(e){e.h=()=>"b031eeef67b076f94233"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi43YzYyNjE4ZmY1MzMyNjIwNDllMy5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7aWtCQUtlLE1BQU1BLEVBQ25CQyxjQUNFQyxLQUFLQyxpQkFDTEQsS0FBS0UsZUFDTEYsS0FBS0csY0FDTEgsS0FBS0ksWUFDUCxDQUVBSCxpQkFDRUQsS0FBS0ssU0FBVyxJQUFJQyxFQUFBQSxTQUVwQk4sS0FBS08sR0FBS1AsS0FBS0ssU0FBU0UsR0FFeEJDLFNBQVNDLEtBQUtDLE9BQU9WLEtBQUtPLEdBQUdJLE9BQy9CLENBRUFULGVBQ0VGLEtBQUtZLE9BQVMsSUFBSUMsRUFBQUEsT0FBT2IsS0FBS08sSUFDOUJQLEtBQUtZLE9BQU9FLFNBQVNDLEVBQUksQ0FDM0IsQ0FFQVosY0FDRUgsS0FBS2dCLE1BQVEsSUFBSUMsRUFBQUEsU0FDbkIsQ0FFQWIsYUFDRUosS0FBS2tCLFNBQVcsSUFBSUMsRUFBQUEsSUFBSW5CLEtBQUtPLElBRTdCUCxLQUFLb0IsUUFBVSxJQUFJQyxFQUFBQSxRQUFRckIsS0FBS08sR0FBSSxDQUNsQ2UsT0FBTSxFQUNOQyxTQUFRQSxPQUFBQSxXQUFBQSxJQUFBQSxFQUFBQSxJQUFBQSxNQUFBQSwwREFBQUEsTUFBQUEsRUFBQUEsS0FBQUEsbUJBQUFBLENBQUFBLENBQUFBLE1BR1Z2QixLQUFLd0IsS0FBTyxJQUFJQyxFQUFBQSxLQUFLekIsS0FBS08sR0FBSSxDQUFFVyxTQUFVbEIsS0FBS2tCLFNBQVVFLFFBQVNwQixLQUFLb0IsVUFDdkVwQixLQUFLd0IsS0FBS0UsVUFBVTFCLEtBQUtnQixNQUMzQixDQUVBVyxXQUNFM0IsS0FBS0ssU0FBU3VCLFFBQVFDLE9BQU9DLFdBQVlELE9BQU9FLGFBRWhEL0IsS0FBS1ksT0FBT29CLFlBQVksQ0FDdEJDLE9BQVFqQyxLQUFLTyxHQUFHSSxPQUFPdUIsTUFBUWxDLEtBQUtPLEdBQUdJLE9BQU93QixRQUVsRCxDQUVBQyxTQUNFcEMsS0FBS3dCLEtBQUthLFNBQVNDLEdBQUssSUFDeEJ0QyxLQUFLd0IsS0FBS2EsU0FBU0UsR0FBSyxJQUV4QnZDLEtBQUtLLFNBQVNtQyxPQUFPLENBQUV4QixNQUFPaEIsS0FBS2dCLE1BQU9KLE9BQVFaLEtBQUtZLFFBQ3pELHlWQ3ZERjZCLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZ3V6c2FuY2FrdGFyLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL2luZGV4LmpzIiwid2VicGFjazovL29ndXpzYW5jYWt0YXIvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhbWVyYSwgUmVuZGVyZXIsIFRyYW5zZm9ybSwgQm94LCBQcm9ncmFtLCBNZXNoIH0gZnJvbSAnb2dsJ1xuXG5pbXBvcnQgdmVydGV4IGZyb20gJy4uLy4uL3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnXG5pbXBvcnQgZnJhZ21lbnQgZnJvbSAnLi4vLi4vc2hhZGVycy9wbGFuZS1mcmFnbWVudC5nbHNsJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW52YXMge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgdGhpcy5jcmVhdGVSZW5kZXJlcigpXG4gICAgdGhpcy5jcmVhdGVDYW1lcmEoKVxuICAgIHRoaXMuY3JlYXRlU2NlbmUoKVxuICAgIHRoaXMuY3JlYXRlQ3ViZSgpXG4gIH1cblxuICBjcmVhdGVSZW5kZXJlciAoKSB7XG4gICAgdGhpcy5yZW5kZXJlciA9IG5ldyBSZW5kZXJlcigpXG5cbiAgICB0aGlzLmdsID0gdGhpcy5yZW5kZXJlci5nbFxuXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQodGhpcy5nbC5jYW52YXMpXG4gIH1cblxuICBjcmVhdGVDYW1lcmEgKCkge1xuICAgIHRoaXMuY2FtZXJhID0gbmV3IENhbWVyYSh0aGlzLmdsKVxuICAgIHRoaXMuY2FtZXJhLnBvc2l0aW9uLnogPSA1XG4gIH1cblxuICBjcmVhdGVTY2VuZSAoKSB7XG4gICAgdGhpcy5zY2VuZSA9IG5ldyBUcmFuc2Zvcm0oKVxuICB9XG5cbiAgY3JlYXRlQ3ViZSAoKSB7XG4gICAgdGhpcy5nZW9tZXRyeSA9IG5ldyBCb3godGhpcy5nbClcblxuICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcbiAgICAgIHZlcnRleCxcbiAgICAgIGZyYWdtZW50XG4gICAgfSlcblxuICAgIHRoaXMubWVzaCA9IG5ldyBNZXNoKHRoaXMuZ2wsIHsgZ2VvbWV0cnk6IHRoaXMuZ2VvbWV0cnksIHByb2dyYW06IHRoaXMucHJvZ3JhbSB9KVxuICAgIHRoaXMubWVzaC5zZXRQYXJlbnQodGhpcy5zY2VuZSlcbiAgfVxuXG4gIG9uUmVzaXplICgpIHtcbiAgICB0aGlzLnJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodClcblxuICAgIHRoaXMuY2FtZXJhLnBlcnNwZWN0aXZlKHtcbiAgICAgIGFzcGVjdDogdGhpcy5nbC5jYW52YXMud2lkdGggLyB0aGlzLmdsLmNhbnZhcy5oZWlnaHRcbiAgICB9KVxuICB9XG5cbiAgdXBkYXRlICgpIHtcbiAgICB0aGlzLm1lc2gucm90YXRpb24ueCArPSAwLjAxXG4gICAgdGhpcy5tZXNoLnJvdGF0aW9uLnkgKz0gMC4wMVxuXG4gICAgdGhpcy5yZW5kZXJlci5yZW5kZXIoeyBzY2VuZTogdGhpcy5zY2VuZSwgY2FtZXJhOiB0aGlzLmNhbWVyYSB9KVxuICB9XG59XG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCJiMDMxZWVlZjY3YjA3NmY5NDIzM1wiKSJdLCJuYW1lcyI6WyJDYW52YXMiLCJjb25zdHJ1Y3RvciIsInRoaXMiLCJjcmVhdGVSZW5kZXJlciIsImNyZWF0ZUNhbWVyYSIsImNyZWF0ZVNjZW5lIiwiY3JlYXRlQ3ViZSIsInJlbmRlcmVyIiwiUmVuZGVyZXIiLCJnbCIsImRvY3VtZW50IiwiYm9keSIsImFwcGVuZCIsImNhbnZhcyIsImNhbWVyYSIsIkNhbWVyYSIsInBvc2l0aW9uIiwieiIsInNjZW5lIiwiVHJhbnNmb3JtIiwiZ2VvbWV0cnkiLCJCb3giLCJwcm9ncmFtIiwiUHJvZ3JhbSIsInZlcnRleCIsImZyYWdtZW50IiwibWVzaCIsIk1lc2giLCJzZXRQYXJlbnQiLCJvblJlc2l6ZSIsInNldFNpemUiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJwZXJzcGVjdGl2ZSIsImFzcGVjdCIsIndpZHRoIiwiaGVpZ2h0IiwidXBkYXRlIiwicm90YXRpb24iLCJ4IiwieSIsInJlbmRlciIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==